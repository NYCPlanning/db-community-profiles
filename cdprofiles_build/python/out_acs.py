from functools import reduce
import pandas as pd
import os
import sys
from factfinder.main import Pff

acs = Pff(api_key=os.environ['CENSUS_API_KEY'], year=int(os.environ['V_ACS'].split('-')[1]))
decennial = Pff(api_key=os.environ['CENSUS_API_KEY'], year=int(os.environ['V_DECENNIAL']))
prev_decennial = Pff(api_key=os.environ['CENSUS_API_KEY'], year=int(os.environ['V_DECENNIAL'])-10)

dec_variable_mapping = [
    {'pff_variable': 'decennial_pop', 'geotype': 'cd', 'column_mapping': {'e': 'pop_2010'}},
    ]
prev_dec_variable_mapping = [
    {'pff_variable': 'decennial_pop', 'geotype': 'cd', 'column_mapping': {'e': 'pop_2000'}},
    ]
acs_variable_mapping = [
 {'pff_variable': 'wtnh',
  'geotype': 'cd',
  'column_mapping': {'p': 'pct_white_nh'}},
 {'pff_variable': 'asnnh', 
  'geotype': 'cd', 
  'column_mapping': {'p': 'pct_asian_nh'}},
 {'pff_variable': 'blnh',
  'geotype': 'cd',
  'column_mapping': {'p': 'pct_black_nh'}},
 {'pff_variable': 'cvlfuem1',
  'geotype': 'borough',
  'column_mapping': {'z': 'moe_unemployment_boro', 'p': 'unemployment_boro'}},
 {'pff_variable': 'cvlfuem1',
  'geotype': 'cd',
  'column_mapping': {'z': 'moe_unemployment', 'p': 'unemployment'}},
 {'pff_variable': 'cvlfuem1',
  'geotype': 'city',
  'column_mapping': {'z': 'moe_unemployment_nyc', 'p': 'unemployment_nyc'}},
 {'pff_variable': 'ea_bchdh',
  'geotype': 'borough',
  'column_mapping': {'z': 'moe_bach_deg_boro', 'p': 'pct_bach_deg_boro'}},
 {'pff_variable': 'ea_bchdh',
  'geotype': 'cd',
  'column_mapping': {'z': 'moe_bach_deg', 'p': 'pct_bach_deg'}},
 {'pff_variable': 'ea_bchdh',
  'geotype': 'city',
  'column_mapping': {'z': 'moe_bach_deg_nyc', 'p': 'pct_bach_deg_nyc'}},
 {'pff_variable': 'fb1',
  'geotype': 'cd',
  'column_mapping': {'z': 'moe_foreign_born', 'p': 'pct_foreign_born'}},
 {'pff_variable': 'fpop0t5',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_under_5'}},
 {'pff_variable': 'fpop10t14',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_10_14'}},
 {'pff_variable': 'fpop15t19',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_15_19'}},
 {'pff_variable': 'fpop20t24',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_20_24'}},
 {'pff_variable': 'fpop25t29',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_25_29'}},
 {'pff_variable': 'fpop30t34',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_30_34'}},
 {'pff_variable': 'fpop35t39',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_35_39'}},
 {'pff_variable': 'fpop40t44',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_40_44'}},
 {'pff_variable': 'fpop45t49',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_45_49'}},
 {'pff_variable': 'fpop50t54',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_50_54'}},
 {'pff_variable': 'fpop55t59',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_55_59'}},
 {'pff_variable': 'fpop5t9',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_5_9'}},
 {'pff_variable': 'fpop60t64',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_60_64'}},
 {'pff_variable': 'fpop65t69',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_65_69'}},
 {'pff_variable': 'fpop70t74',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_70_74'}},
 {'pff_variable': 'fpop75t79',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_75_79'}},
 {'pff_variable': 'fpop80t84',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_80_84'}},
 {'pff_variable': 'fpop85pl',
  'geotype': 'cd',
  'column_mapping': {'p': 'female_85_over'}},
 {'pff_variable': 'grpi35pl',
  'geotype': 'borough',
  'column_mapping': {'z': 'moe_hh_rent_burd_boro',
   'p': 'pct_hh_rent_burd_boro'}},
 {'pff_variable': 'grpi35pl',
  'geotype': 'cd',
  'column_mapping': {'z': 'moe_hh_rent_burd', 'p': 'pct_hh_rent_burd'}},
 {'pff_variable': 'grpi35pl',
  'geotype': 'city',
  'column_mapping': {'z': 'moe_hh_rent_burd_nyc',
   'p': 'pct_hh_rent_burd_nyc'}},
 {'pff_variable': 'hsp1',
  'geotype': 'cd',
  'column_mapping': {'p': 'pct_hispanic'}},
 {'pff_variable': 'lgoenlep1',
  'geotype': 'borough',
  'column_mapping': {'z': 'moe_lep_rate_boro', 'p': 'lep_rate_boro'}},
 {'pff_variable': 'lgoenlep1',
  'geotype': 'cd',
  'column_mapping': {'z': 'moe_lep_rate', 'p': 'lep_rate'}},
 {'pff_variable': 'lgoenlep1',
  'geotype': 'city',
  'column_mapping': {'z': 'moe_lep_rate_nyc', 'p': 'lep_rate_nyc'}},
 {'pff_variable': 'mntrvtm',
  'geotype': 'borough',
  'column_mapping': {'m': 'moe_mean_commute_boro', 'e': 'mean_commute_boro'}},
 {'pff_variable': 'mntrvtm',
  'geotype': 'cd',
  'column_mapping': {'m': 'moe_mean_commute', 'e': 'mean_commute'}},
 {'pff_variable': 'mntrvtm',
  'geotype': 'city',
  'column_mapping': {'m': 'moe_mean_commute_nyc', 'e': 'mean_commute_nyc'}},
 {'pff_variable': 'mpop0t5',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_under_5'}},
 {'pff_variable': 'mpop10t14',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_10_14'}},
 {'pff_variable': 'mpop15t19',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_15_19'}},
 {'pff_variable': 'mpop20t24',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_20_24'}},
 {'pff_variable': 'mpop25t29',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_25_29'}},
 {'pff_variable': 'mpop30t34',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_30_34'}},
 {'pff_variable': 'mpop35t39',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_35_39'}},
 {'pff_variable': 'mpop40t44',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_40_44'}},
 {'pff_variable': 'mpop45t49',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_45_49'}},
 {'pff_variable': 'mpop50t54',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_50_54'}},
 {'pff_variable': 'mpop55t59',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_55_59'}},
 {'pff_variable': 'mpop5t9',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_5_9'}},
 {'pff_variable': 'mpop60t64',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_60_64'}},
 {'pff_variable': 'mpop65t69',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_65_69'}},
 {'pff_variable': 'mpop70t74',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_70_74'}},
 {'pff_variable': 'mpop75t79',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_75_79'}},
 {'pff_variable': 'mpop80t84',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_80_84'}},
 {'pff_variable': 'mpop85pl',
  'geotype': 'cd',
  'column_mapping': {'p': 'male_85_over'}},
 {'pff_variable': 'pop65pl1',
  'geotype': 'borough',
  'column_mapping': {'z': 'moe_over65_rate_boro', 'p': 'over65_rate_boro'}},
 {'pff_variable': 'pop65pl1',
  'geotype': 'cd',
  'column_mapping': {'z': 'moe_over65_rate', 'p': 'over65_rate'}},
 {'pff_variable': 'pop65pl1',
  'geotype': 'city',
  'column_mapping': {'z': 'moe_over65_rate_nyc', 'p': 'over65_rate_nyc'}},
 {'pff_variable': 'pop_1',
  'geotype': 'borough',
  'column_mapping': {'e': 'pop_acs_boro'}},
 {'pff_variable': 'pop_1',
  'geotype': 'cd',
  'column_mapping': {'e': 'pop_acs'}},
 {'pff_variable': 'pop_1',
  'geotype': 'city',
  'column_mapping': {'e': 'pop_acs_nyc'}},
 {'pff_variable': 'popu181',
  'geotype': 'borough',
  'column_mapping': {'z': 'moe_under18_rate_boro', 'p': 'under18_rate_boro'}},
 {'pff_variable': 'popu181',
  'geotype': 'cd',
  'column_mapping': {'z': 'moe_under18_rate', 'p': 'under18_rate'}},
 {'pff_variable': 'popu181',
  'geotype': 'city',
  'column_mapping': {'z': 'moe_under18_rate_nyc', 'p': 'under18_rate_nyc'}}]

def calculate(inputs, pff):
    pff_variable=inputs['pff_variable']
    geotype=inputs['geotype']
    column_mapping=inputs['column_mapping']
    return pff.calculate(pff_variable,geotype).rename(columns=column_mapping)[['census_geoid']+list(column_mapping.values())]

dfs = []

for i in acs_variable_mapping:
    df = calculate(i, acs)
    dfs.append(df)

for i in dec_variable_mapping:
    df = calculate(i, decennial)
    dfs.append(df)
'''
for i in prev_dec_variable_mapping:
    df = calculate(i, prev_decennial)
    dfs.append(df)
'''
dff = reduce(lambda left,right: pd.merge(left,right, on=['census_geoid'],
                                            how='outer'), dfs)

#dff.to_csv('output/acs_output.csv', index=False)
dff.to_csv(sys.stdout, index=False)